#include<stdio.h>
#include<stdlib.h>

struct node{
    int data;
    struct node*right;
    struct node*left;
};

struct node*CreateNode(int data){
    struct node*n = (struct node*)malloc(sizeof(struct node));
    n->data = data;
    n->left = NULL;
    n->right = NULL;
    return n;
};

//PREORDER TRAVERSAL
void PreOrder(struct node*root){
    if(root != NULL){
        printf("%d ",root->data);
        PreOrder(root->left);
        PreOrder(root->right);
    }
}

void PostOrder(struct node*root){
    if(root != NULL){
        PostOrder(root->left);
        PostOrder(root->right);
        printf("%d ", root->data);
    }
}

void InOrder(struct node*root){
    if(root != NULL){
        InOrder(root->left);
        printf("%d ",root->data);
        InOrder(root->right);
    }
}

int main(){
    struct node*p = CreateNode(4);
    struct node*p1 = CreateNode(1);
    struct node*p2 = CreateNode(6);
    struct node*p3 = CreateNode(5);
    struct node*p4 = CreateNode(2);

    p->left = p1;
    p->right = p2;
    p1->left = p3;                                                    

    p1 ->right = p4;

    printf(" The PreOrder form is : \n");
    PreOrder(p);
    printf("\n The PostOrder form is : \n");
    PostOrder(p);
    printf("\n The InOrder form is : \n");
    InOrder(p);
    return 0;
}



///       4
///      / \
///     1   6
///    / \
///   5   2
