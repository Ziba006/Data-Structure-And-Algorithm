#include<stdio.h>
#include<stdlib.h>

struct  queue{
    int size;
    int f;
    int r;
    int *arr;
};

int isEmpty(struct queue*q){
    if(q->r == q->f){
        return 1;
    }
    return 0;
}

int isFull(struct queue*q){
    if(q->r == q->size-1){
        return 1;
    }
    return 0;
}

void enqueue(struct queue*q, int val){
    if(isFull(q)){
        printf("Queue is Full!\n");
    }
    else{
        q->r++;
        q->arr[q->r] = val;
        printf("Element %d enqueued\n",val);
    }
}

int dequeue(struct queue*q){
    int a = -1;
    if(isEmpty(q)){
        printf("Queue is Empty!\n");
    }
    else{
        q->f++;
        a = q->arr[q->f];
    }
    return a;
}

int main(){
    struct queue q;
    q.size = 100;
    q.f =q.r =0;
    q.arr = (int*)malloc(q.size*sizeof(int));

    enqueue(&q, 12);
    enqueue(&q, 102);
    enqueue(&q, 13);
    enqueue(&q, 132);
    printf("Dequeued Element:%d \n",dequeue(&q));
    printf("Dequeued Element:%d \n",dequeue(&q));

    if (isEmpty(&q)){
        printf("Queue is Empty\n");
    }
    if(isFull(&q)){
        printf("Queue is Full\n");
    }
    return 0;
}
